--------------- QUERY select -----------------

1- SELECT *
   FROM software_houses
  WHERE country = 'United States';

2- SELECT *
   FROM players
   WHERE city = 'Rogahnland';

3- SELECT *
   FROM players
   WHERE name LIKE '%a';

4- SELECT *
   FROM reviews
   WHERE player_id = 800;

5- SELECT *
   FROM tournaments
   WHERE year = 2015;

6- SELECT *
   FROM awards
   WHERE description LIKE '%facere%';

7- SELECT DISTINCT videogame_id
   FROM category_videogame
   WHERE category_id = 2
   OR category_id = 6;

8- SELECT *
   FROM reviews
   WHERE rating >= 2 AND rating <= 4;

9- SELECT *
   FROM videogames
   WHERE YEAR(release_date) = 2020;

10- SELECT DISTINCT videogame_id
    FROM reviews
    WHERE rating = 5;

11- SELECT COUNT(rating) as reviews_total_number, AVG(rating) as average_rating
    FROM reviews
    WHERE videogame_id = 412;

12- SELECT COUNT(*) as videogames
    FROM videogames
    WHERE software_house_id = 1 AND YEAR(release_date) = 2018;

-------------------  QUERY group by -------------------------

1- SELECT COUNT(*) as software_houses, country
   FROM software_houses
   GROUP BY country;

2- SELECT COUNT(*) as videogames_reviews_number
   FROM reviews
   GROUP BY videogame_id;

3- SELECT COUNT(videogame_id) as games_by_label, pegi_label_id
   FROM pegi_label_videogame
   GROUP BY pegi_label_id;

4- SELECT COUNT(*) as games_by_year, YEAR(release_date) as release_year
   FROM videogames
   GROUP BY YEAR(release_date);

5- SELECT COUNT(videogame_id) as games_by_device, device_id
   FROM device_videogame
   GROUP BY device_id;

6- SELECT videogame_id
   FROM reviews
   GROUP BY videogame_id
   ORDER BY AVG(rating) DESC;

--------------------  QUERY join -------------------------------

1- SELECT players.id, name, lastname, nickname, city
   FROM players
   INNER JOIN reviews ON players.id = reviews.player_id
   GROUP BY players.id, name, lastname, nickname, city
   HAVING COUNT(reviews.rating) > 0;

2- SELECT tournaments.year, videogame_id, videogames.name
   FROM videogames
   INNER JOIN tournament_videogame ON videogames.id = tournament_videogame.videogame_id
   INNER JOIN tournaments ON tournament_id = tournaments.id
   GROUP BY tournaments.year, videogame_id, videogames.name
   HAVING tournaments.year = 2016;

3- SELECT videogame_id, videogames.name, categories.name
   FROM videogames
   INNER JOIN category_videogame ON videogames.id = category_videogame.videogame_id
   INNER JOIN categories ON category_id = categories.id
   GROUP BY videogame_id, videogames.name, categories.name;

4- SELECT software_houses.name, software_houses.city ,software_houses.country
   FROM software_houses
   INNER JOIN videogames ON software_houses.id = videogames.software_house_id
   WHERE YEAR(release_date) > 2020
   GROUP BY software_houses.name, software_houses.city ,software_houses.country;

5- SELECT software_houses.name, videogames.name ,awards.name
   FROM awards
   INNER JOIN award_videogame ON awards.id = award_videogame.award_id
   INNER JOIN videogames ON award_videogame.videogame_id = videogames.id
   INNER JOIN software_houses ON videogames.software_house_id = software_houses.id
   GROUP BY software_houses.name, videogames.name, awards.name;

6- SELECT categories.name as category_name, pegi_labels.name as pegi_label_name, videogames.name as game_name
   FROM videogames
   INNER JOIN reviews ON videogames.id = reviews.videogame_id
   INNER JOIN category_videogame on videogames.id = category_videogame.videogame_id
   INNER JOIN categories ON category_videogame.category_id = categories.id
   INNER JOIN pegi_label_videogame ON videogames.id = pegi_label_videogame.videogame_id
   INNER JOIN pegi_labels ON pegi_label_videogame.pegi_label_id = pegi_labels.id
   WHERE reviews.rating IN (4, 5)
   GROUP BY categories.name, pegi_labels.name, videogames.name;

7- SELECT videogames.id as game_id
   FROM tournaments
   INNER JOIN tournament_videogame ON tournaments.id = tournament_videogame.tournament_id
   INNER JOIN videogames ON tournament_videogame.videogame_id = videogames.id
   INNER JOIN player_tournament ON tournaments.id = player_tournament.tournament_id
   INNER JOIN players ON player_tournament.player_id = players.id
   WHERE players.name LIKE 'S%'
   GROUP BY videogames.id;

8- SELECT DISTINCT tournaments.city AS tournament_cities
   FROM tournaments
   INNER JOIN tournament_videogame ON tournaments.id = tournament_videogame.tournament_id
   INNER JOIN videogames ON tournament_videogame.videogame_id = videogames.id
   INNER JOIN award_videogame ON videogames.id = award_videogame.videogame_id
   INNER JOIN awards ON award_videogame.award_id = awards.id
   WHERE awards.name = 'Gioco dell''anno' AND  award_videogame.year = 2018;

9- SELECT players.name, players.lastname
   FROM tournaments
   INNER JOIN player_tournament ON tournaments.id = player_tournament.tournament_id
   INNER JOIN players ON player_tournament.player_id = players.id
   INNER JOIN tournament_videogame ON tournaments.id = tournament_videogame.tournament_id
   INNER JOIN videogames ON tournament_videogame.videogame_id = videogames.id
   INNER JOIN award_videogame ON videogames.id = award_videogame.videogame_id
   INNER JOIN awards ON award_videogame.award_id = awards.id
   WHERE awards.name = 'Gioco pi√π atteso' AND award_videogame.year = 2018 AND tournaments.year = 2019;

10- SELECT TOP 1 software_houses.id, software_houses.name, videogames.name, videogames.release_date
    FROM software_houses
    INNER JOIN videogames on software_houses.id = videogames.software_house_id
    ORDER BY videogames.release_date ASC;

11-
12-
13-